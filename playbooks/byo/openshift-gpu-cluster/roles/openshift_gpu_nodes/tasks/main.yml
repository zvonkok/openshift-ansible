---
- block:
    - name: check for the right kernel version
      shell: test `uname -r` == "3.10.0-693.el7.x86_64"
      register: version_check
      ignore_errors: true


    - block:
        - name: remove all old and new kernels
          shell: |
                for i in `rpm -q kernel`
                do
                    rpm -e $i;
                done

        - name: Install kernel specific for CUDA
          yum:
            allow_downgrade: yes
            name:  kernel-3.10.0-693.el7.x86_64
            state: present

        - name: Install kernel-devel specific for CUDA
          yum:
            allow_downgrade: yes
            name:  kernel-devel-3.10.0-693.el7.x86_64
            state: present

        - name: recreate grub2 config
          shell: grub2-mkconfig -o /boot/grub2/grub.cfg

        - name: get current time
          command: /bin/date +%s
          register: before_reboot

        - name: reboot system
          shell: sleep 2; shutdown -r now
          async: 1
          poll: 0
          ignore_errors: true

        - name: waiting for server to come back
          local_action:
            module: wait_for
              host    = {{ inventory_hostname }}
              state   = started
              port    = 22
              delay   = 30
              timeout = 180

        - name: verify a reboot was actually initiated
          # machine should have started after it has been rebooted
          shell: (( `date +%s` - `awk -F . '{print $1}' /proc/uptime` > {{ before_reboot.stdout }} ))
          sudo: false
      when: "version_check.rc != 0"
  when: fixture_get_specific_kernel_version


- name: set fact nvgpuname for future use
  set_fact: NV_GPU_NAME={{ "0xDEADBEEF" }}


- name: Get atomic
  yum:
    name:  atomic
    state: present

- name: pull nvidia-system-container
  shell: atomic pull --storage ostree docker.io/zvonkok/redhat:nvidia-384.81

- name: install nvidia-system-container
  shell: atomic install --system --system-package=no zvonkok/redhat:nvidia-384.81

- name: eval profile.d
  shell: /bin/bash /etc/profile.d/nvidia.sh

- name: Check for GPU support
  command: nvidia-smi
  register: nsmi
  failed_when: "nsmi.rc != 0"

- name: get NVIDIA GPU name
  shell: nvidia-smi --query-gpu=gpu_name --format=csv,noheader --id=0 | sed -e 's/ /-/g'
  register: nvgpuname

- name: set fact nvgpuname for future use
  set_fact: NV_GPU_NAME={{ nvgpuname.stdout }}



- name: change selinux context of /dev/nvidia*
  shell: |
    chcon -t svirt_sandbox_file_t  /dev/nvidia*
    chcon -u system_u              /dev/nvidia*

- name: add feature-gate to node-config.yaml
  yedit:
    src: /etc/origin/node/node-config.yaml
    key: kubeletArguments.feature-gates
    value:
    - "Accelerators=true"

- name: atomic-openshift-node restart
  systemd:
    state: restarted
    name: atomic-openshift-node

- name: verify feature gate
  shell: journalctl -u atomic-openshift-node --since="5 minutes ago" | grep feature | grep 'Accelerators:true'
  register: featgate
  failed_when: "featgate.rc != 0"
